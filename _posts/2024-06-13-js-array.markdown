---
layout: post
title: "배열"
date: 2024-06-13 00:00:00 +0900
categories: javaScript
---

## 배열

### 배열 선언

```javascript
let numArr = [1, 2, 3, 4, 5];
// 자바스크립트의 배열에는 숫자, 문자열, 객체, 다른 배열등 다양한 타입의 데이터가 들어갈 수 있음
let student1 = ["홍길동", 17, [152.4, 53.9]];
```

### 배열 요소의 접근과 수정

```javascript
numArr[3] = 10;

console.log(numArr); // [1, 2, 3, 10, 5]

student1[1] += 1;

console.log(student1); // ['홍길동', 18, array(2)]
```

<br>
<hr>
<br>

## 배열 객체

### 속성

#### 배열의 크기(요소 개수)

`length`<br>

> ex

```javascript
let arr = new Array(5);

for (let i = 0; i < arr.length; i++) {
    arr[i] = i;
}

console.log(arr); // [0, 1, 2, 3, 4]
```

<br>

### 메서드

#### 배열의 끝에 요소 추가

`push(item1, [item2, item3, ...])`

> ex

```javascript
let arr = [0, 1, 2, 3, 4];

arr.push(5, 6, 7);

console.log(arr); // [0, 1, 2, 3, 4, 5, 6, 7]
```

<br>

#### 배열의 특정 위치에 요소 추가, 제거, 교체

`splice(index, [count, item1, item2, ...])`<br>
**index**: 요소 추가 시작 인덱스<br>
**count**: index번 부터 제거할 요소의 개수<br>
**item**: 추가할 요소<br>
<br>

**index** 번에서 부터 **count** 개수만큼의 요소를 제거하고 **item** 요소들을 추가

> ex

```javascript
let arr = [0, 1, 2, 3, 4];

arr.splice(3, 0, 2.5);

console.log(arr); // [0, 1, 2, 2.5, 3, 4]

arr.splice(2, 2);

console.log(arr); // [0, 1, 3, 4]
```

<br>

#### 배열의 마지막 요소 제거

`pop()`

> ex

```javascript
let arr = [0, 1, 2, 3, 4];

arr.pop();

console.log(arr); // [0, 1, 2, 3]
```

<br>

#### 특정 index 의 요소 구하기

`at([index])`<br>
**index**: (default: 0)<br>

> ex

```javascript
let arr = [0, 1, 2, 3, 4];

console.log(arr.at()); // 0
console.log(arr.at(3)); // 3
```

<br>

#### 배열 뒤집기

`reverse()`<br>

> ex

```javascript
let arr = [0, 1, 2, 3, 4];

arr.reverse();

console.log(arr); // [4, 3, 2, 1, 0]
```

<br>

#### 배열의 일부 복사본 만들기

`slice([start, end])`<br>
**start**: 시작 인덱스(default: 0)<br>
**end**: 끝 인덱스(default: last index)<br>

<br>

-   start 인덱스부터 end 인덱스 전 인덱스 까지의 배열을 잘라 새로운 배열 객체 반환
-   원본은 변하지 않음

> ex

```javascript
let arr = [0, 1, 2, 3, 4];

let arr2 = arr.slice(1, 4);

console.log(arr); // [0, 1, 2, 3, 4] -> 원본 유지
console.log(arr2); // [1, 2, 3]
```

<br>

#### 배열의 각 요소에 접근

`forEach(function(currentValue, [index, arr]), [thisValue])`<br>
**function(currentValue, [index, arr])**: 각 요소 차례 마다 실행할 함수<br>
**thisValue**

<br>

> ex

```javascript
let arr = [0, 1, 2, 3, 4];
let sum = 0;

// 배열의 각 요소를 더한 값 출력
arr.forEach(function (item) {
    sum += item;
});

console.log(sum); // 10

// 배열의 각 요소에 곱하기 2
arr.forEach(function (item, index, array) {
    array[index] = item *= 2;
});

console.log(arr); // [0, 2, 4, 6, 8]
```

<br>
