---
layout: post
title: "변수와 상수"
date: 2024-05-24 00:00:00 +0900
categories: javaScript
---

## JavaScript 변수와 상수

### 변수

변할 수 있는 값을 저장하기 위한 저장소

#### 변수 선언과 초기화

`let` 키워드를 사용하여 변수 선언

```javascript
// number 변수를 선언
let number;

// number 변수의 값을 3으로 초기화
number = 3;

// 선언과 동시에 초기화
let name = "홍길동";

// 변수에 새로운 값 할당
number = 5;
```

`var` 키워드는 더이상 사용하지 않음

<br>

#### 변수 타입

다른 프로그래밍 언어와 달리 변수 타입을 선언할 필요가 없음

```javascript
// 숫자
let age = 28;
let number = 3; // 숫자 3

// 문자열
let name = "홍길동";
let myNumber = "3"; // 문자 3

// 불리언
let isReal = true;
let test = 10 > 20;
console.log(test); // false

// 배열
let array = [1, 2, 3, 4, 5];
console.log(array[0]); // 1

// 객체
let person = { name: "홍길동", age: 25 };
console.log(person.name); // 홍길동
```

<br>

### 상수

변하지 않는 값을 저장하는 저장소<br>
선언과 동시에 초기화해야함<br>
초기화 후에는 새로운 값 할당 불가<br>
가능하다면 `const`를 사용하고 필요한 경우 `let`사용을 권장<br>

```javascript
// 선언과 동시에 초기화
const PI = 3.14;

PI = 5; // 재할당 불가, 에러발생
```

<br>

### 변수, 상수 명명 규칙

<!-- // 변수, 상수 명명 규칙
            // 1. 첫 글자는 반드시 영문자 | $ | _(underscore) 로 시작한다.
            // 2. 변수나 상수 이름은 가급적 의미있게 만든다.
            // 3. 변수는 소문자로 시작하고 카멜(camel) 규칙을 따른다.
            // 4. 상수는 대문자만으로 쓰는 것을 추천
            //  두 단어 이상 결합하는 경우 underscore 사용
            // 5. 영문자는 대소문자를 구분한다.
            // 6. 예약어(키워드)는 변수 또는 상수명으로 사용할 수 없다.
            // 7. 공백은 포함하지 않는다.

            // 프로그래밍 표기법
            // 1. Camel Case (카멜 규칙)
            // ex) phoneNumberAddress
            // 2. Pascal Case (파스칼 케이스)
            // ex) PhoneNumberAddress
            // 3. Kebab Case (케밥)
            // ex) phone-number-address
            // 4. Snake Case (스네이크)
            // ex) phone_number_address -->

<br>
